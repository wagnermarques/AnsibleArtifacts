---
# vars file for update_and_upgrade_debian_or_ubuntu

    #https://www.cyberciti.biz/faq/ansible-apt-update-all-packages-on-ubuntu-debian-linux/
    # update_cache=yes Run the equivalent of apt-get update command
    # force_apt_get=yes - Do not use the aptitude command, instead use
    # the apt-get command on Debian/Ubuntu boxes
    # cache_valid_time=3600 - Update the apt cache if its older than
    # the cache_valid_time.
    # This option is set in seconds.
    #In this examples, it is set to 3600 seconds. 
- name: Update apt-get repo and cache
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    #https://www.cyberciti.biz/faq/ansible-apt-update-all-packages-on-ubuntu-debian-linux/
    # upgrade=dist
    # Run the equivalent of 'apt-get upgrade' command on all Ubuntu or
    # Debian Linux servers.
    # In other words, upgrade all packages to latest version.
    # force_apt_get=yes
    # Use apt-get instead of aptitude.
- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes

    #https://www.cyberciti.biz/faq/ansible-apt-update-all-packages-on-ubuntu-debian-linux/
    # register: reboot_required_file
    # The 'register' keyword decides what variable to save a result in
    # and we are going to use it as follows to reboot the box.
    # stat: path=/var/run/reboot-required
    # Determine if a path (/var/run/reboot-required) exists   
    # get_md5=no
    # Algorithm to determine checksum of file.
    # In this example, I am using md5, but you can use sha1, sha224, sha256, sha384, and sha512.
- name: Check if a reboot is needed for Debian and Ubuntu boxes
  register: reboot_required_file
  stat: path=/var/run/reboot-required get_md5=no
      

      #https://www.cyberciti.biz/faq/ansible-apt-update-all-packages-on-ubuntu-debian-linux/    
      # test_command: uptime
      # Execute uptime command on the rebooted server and expect success from to determine the machine is ready for further tasks.
      # when: reboot_required_file.stat.exists
      # First, check that the file named /var/run/reboot-required exists
      # using a variable named reboot_required_file.
      # The reboot module will only work if that file exists
      # and it is enforced using
      # when: reboot_required_file.stat.exists Ansible condition.
- name: Reboot the Debian or Ubuntu server
  reboot:
    msg: "Reboot initiated by Ansible due to kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists
