#+Title: Container p/ C/C++ Development

* introducao
  Esse playbook apenas gera uma imagem de container com gcc
  instalado. 

  A ideia e ter aqui algumas variantes desse playbook pra ambientes
  mais especificos se surgir a necessidade. Por enquanto a ideia e complilar c/c++ basicos,
  webassemblies e compilar o samba4 e compilar alguma coisa para o
  esp32... Eu sei que esse ambiente de compilacao esta bem generico
  mas por enquanto ainda nao tenho certeza se vale a pena separar
  containers especificos para esses varios propositos, vou comecar com
  um container so mesmo...

  
  
* gerando o container
  
  
#+NAME: parseShellAnsiColorCharacters
#+BEGIN_SRC elisp :session s1 :var data=""  :results silent  :exports node
  (print (ansi-color-apply data))
#+END_SRC

Primeiro vamos dar uma olhada nos arquivos que temos aqui no diretorio
do nosso playbook.

#+NAME: visualizando dir do playbook
#+BEGIN_SRC shell :session s1 :results output :exports both :post parseShellAnsiColorCharacters(data=*this*)
  export playbookDir=/home/wagner/fzlbpms/submodules/ansible-artifacts/playbook-container-docker-cc++
  cd $playbookDir
  ls -l
#+END_SRC

O comando ls -l mostra que temo o arquivo site.yml que e nosso
playbook e temos um script run-ansible-playbook.sh que serve pra gente
rodar nosso playbook.

Se vc quizer criar um container debian10 modifique o
run-ansible-playbook.sh pra usar o arquivo
extra-vars-debian10slim.json como parametros para o playbook, caso
queira um fedora 33 use o arquivo extra-vars-fedora33.json


#+RESULTS: visualizando dir do playbook
#+begin_example

 [wagner@wagner-Insp153567 playbook-container-docker-cc++]$ total 36
drwxr-xr-x 2 wagner wagner 4096 jan 31 15:22 bin
drwxr-xr-x 2 wagner wagner 4096 jan 31 15:23 c++_projexample
drwxr-xr-x 2 wagner wagner 4096 jan 31 14:44 c_projexample
-rw-r--r-- 1 wagner wagner  359 jan 31 13:39 extra-vars-debian10slim.json
-rw-r--r-- 1 wagner wagner  339 jan 31 10:10 extra-vars-fedora33.json
-rw-r--r-- 1 wagner wagner  127 jan 29 22:47 hosts
-rw-r--r-- 1 wagner wagner 1924 jan 31 15:30 README.org
-rwxr-xr-x 1 wagner wagner  120 jan 31 10:31 run-ansible-playbook.sh
-rw-r--r-- 1 wagner wagner  227 jan 31 10:23 site.yml
#+end_example



entao, pra criar o container basta fazer o seguinte...


#+NAME: run-ansible-playbook.sh
#+BEGIN_SRC shell :session s1 :results output :exports both :post parseShellAnsiColorCharacters(data=*this*)
  export playbookDir=/home/wagner/fzlbpms/submodules/ansible-artifacts/playbook-container-docker-cc++
  cd $playbookDir
  ./run-ansible-playbook.sh
#+END_SRC


* usando o container pra compilar um hello world

** tema mais de uma maneira de usar o container
  E comum que qualquer projeto esteja abrigado em um diretorio
especifico.
 
  A ideia e que todo o projeto que for utilizar o container pra
  compilar use um alias... tipo gcc viraria docker run-it -rm imgName /usr/bin/gcc

  Nesse um alias pode ser muito introzivo, ja que ele vai continuar
  existindo mesmo sem o desenvolvedor estar trabalhando no projeto..

  Entao que tal um gcc.sh que pode estar dentro do projeto que
  executara docker run-it -rm imgName /usr/bin/gcc? 

  Optei, por enquanto por isso, um gcc.sh ou g++.sh e assim por diante
  pra representar os comandos q vao se executados dentro do container.

** usando o container 

*** projeto c_projexample   
  Vamos ver primeiro o diretorio c_projexample

  Abaixo, vc vai ver que entrarmos no diretorio do projeto e demos um
  ls -la pra gente conhecer o que tem dentro

#+NAME: ls -la 
#+BEGIN_SRC shell :session s1 :results output :exports both  :post parseShellAnsiColorCharacters(data=*this*)
  export dirProjExample=/home/wagner/fzlbpms/submodules/ansible-artifacts/playbook-container-docker-cc++/example_projects/c_projexample
  cd $dirProjExample
  ls -la
#+END_SRC

#+RESULTS: ls -la
: 
:  [wagner@wagner-Insp153567 c_projexample]$ total 16
: drwxr-xr-x 2 wagner wagner 4096 abr  3 13:56 .
: drwxr-xr-x 4 wagner wagner 4096 abr  3 12:53 ..
: -rwxr-xr-x 1 wagner wagner  128 abr  3 13:56 gcc.sh
: -rw-r--r-- 1 wagner wagner   69 jan 31 13:51 helloworld.c

acima, vc ve que nao tem o a.out porque a gente precisa compilar o
helloworld.c pra obte-lo.


#+NAME:./gcc.sh helloworld.c 
#+BEGIN_SRC shell :session s1 :results output :exports both :post parseShellAnsiColorCharacters(data=*this*)
  cd $dirProjExample
  ./gcc.sh helloworld.c 
    ls -la
#+END_SRC

#+RESULTS: ./gcc.sh helloworld.c
: 
:  [wagner@wagner-Insp153567 c_projexample]$ total 36
: drwxr-xr-x 2 wagner wagner  4096 abr  3 13:57 .
: drwxr-xr-x 4 wagner wagner  4096 abr  3 12:53 ..
: -rwxr-xr-x 1 wagner wagner 16616 abr  3 13:57 a.out
: -rwxr-xr-x 1 wagner wagner   128 abr  3 13:56 gcc.sh
: -rw-r--r-- 1 wagner wagner    69 jan 31 13:51 helloworld.c

  
Nosso a.out esta presente agora certo?

*** projeto c++_projeexample
    

Agora, vamos compilar um  um helloworld.cpp

#+NAME:./bin/g++.sh
#+BEGIN_SRC shell :session s1 :results output :exports both :post parseShellAnsiColorCharacters(data=*this*)
  projDir=/home/wagner/fzlbpms/submodules/ansible-artifacts/playbook-container-docker-cc++/example_projects/c++_projexample
  cd $projDir
  echo "###--> Listando arquivos do projeto..."
  ls -ilha
  echo "###--> Compilando o arquivo helloworld.cpp"
  ./g++.sh helloworld.cpp 
  echo "###--> Listando novamente arqs do projeto"
  ls -ilha
#+END_SRC

#+RESULTS: ./bin/g++.sh
#+begin_example

 [wagner@wagner-Insp153567 c++_projexample]$ ###--> Listando arquivos do projeto...
 total 16K
48104641 drwxr-xr-x 2 wagner wagner 4,0K abr  3 14:15 .
48104451 drwxr-xr-x 4 wagner wagner 4,0K abr  3 12:53 ..
48104619 -rwxr-xr-x 1 wagner wagner  129 abr  3 14:01 g++.sh
48104644 -rw-r--r-- 1 wagner wagner   95 jan 31 14:57 helloworld.cpp
 ###--> Compilando o arquivo helloworld.cpp
 [wagner@wagner-Insp153567 c++_projexample]$ ###--> Listando novamente arqs do projeto
 total 36K
48104641 drwxr-xr-x 2 wagner wagner 4,0K abr  3 14:15 .
48104451 drwxr-xr-x 4 wagner wagner 4,0K abr  3 12:53 ..
48104623 -rwxr-xr-x 1 wagner wagner  17K abr  3 14:15 a.out
48104619 -rwxr-xr-x 1 wagner wagner  129 abr  3 14:01 g++.sh
48104644 -rw-r--r-- 1 wagner wagner   95 jan 31 14:57 helloworld.cpp
#+end_example

*** makefile_projexample

#+NAME: ./g++.sh main.cpp hello.cpp factorial.cpp -o hello
#+BEGIN_SRC shell :session s1 :results output :exports both :post parseShellAnsiColorCharacters(data=*this*)
  export projDir=/home/wagner/fzlbpms/submodules/ansible-artifacts/playbook-container-docker-cc++/example_projects/makefile_projexample
  cd $projDir

  echo "###=> Listando arquivos do projeto"
  ls -ilha

  echo "###=> Compilando o projeto"
  ./g++.sh  factorial.cpp  main.cpp hello.cpp functions.h -o hello

#+END_SRC



























